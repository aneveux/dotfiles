[user]
	name = {{ user.name | default('john_doe') }}
	email = {{ user.mail | default('john@doe.org') }}
{% if user.gpg_key is defined %}
	signingkey = {{ user.gpg_key }}
{% endif %}

{% if user.gpg_key is defined %}
[commit]
	gpgsign = true
{% endif %}

[push]
	followTags = true
	default = current

[pull]
	default = simple
	rebase = true

[fetch]
	prune = true

[merge]
	tool = vimdiff

[rebase]
	autostash = true
	autosquash = true

[diff]
	indentHeuristic = true
	wordRegex = [A-Za-z0-9]+|[^[:space:]]

[log]
	date = format:%a %b %-d %Y @ %-I:%M %p
	decorate = yes

[core]
	excludesfile = ~/.gitignore
	editor = vim
	filemode = false
	trustctime = false
	autocrlf = input
	pager = diff-so-fancy | less --tabs=4 -RFX

[interactive]
	diffFilter = diff-so-fancy

[advice]
	commitBeforeMerge = false
	detachedHead = false
	pushUpdateRejected = false
	statusHints = false

[color]
	status = auto
	branch = auto
	interactive = auto
	ui = true

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

[color "diff"]
	meta = 227
	frag = magenta bold
	commit = 227 bold
	old = red bold
	new = green bold
	whitespace = red reverse

[color "status"]
	added = green reverse
	changed = yellow reverse
	untracked = red reverse

[mergetool]
	keeptemporaries = false
	keepbackups = false
	prompt = false
	trustexitcode = false

[alias]
	# Basic
	addp = add -p
	co = checkout
	ci = commit
	ca = commit -a
	cm = commit -m
	cam = commit -am
	amend = commit --amend
	stat = status
	st = status -sb
	br = branch
	unstage = reset HEAD
	uns = reset HEAD
	garbage = gc --prune=now
	pullr = pull --rebase
	surr = submodule update --recursive --remote
	sclone = clone --depth=1

	# Logs
	l = log --graph --pretty=custom
	ll = log --stat --abbrev-commit
	lc = shortlog --summary --numbered
	gl = log -16 --color=always --all --graph --topo-order --pretty='format: %Cgreen%h%Creset %s%Cred%d%Creset%n'
	gll = log --color=always --all --graph --topo-order --pretty='format: %Cgreen%h%Creset %s%Cred%d%Creset%n'
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

	# Remote
	currentbranch = !git branch --contains HEAD | tr -s ' ' | cut -d ' ' -f2
	fo = fetch origin
	fu = fetch upstream
	po = push origin
	lo = pull origin
	mo = !git merge --no-ff origin/`git currentbranch`
	uo = !git merge --ff-only origin/`git currentbranch`

	# Review
	rdiff = !git diff $1...$2 --no-merges
	rlog = !git log $1..$2 --no-merges --format='%h | %an | %ad | %s' --date=local

	# Tools
	head = rev-list --max-count=1 HEAD
	pack = !git archive HEAD --format=tar | gzip > ./`git h`.tar.gz
	ignore = !([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore
	last = log -1 --stat
	cp = cherry-pick
	cl = clone
	dc = diff --cached

	# LOL
	dad = !curl https://icanhazdadjoke.com/ && git add

[pretty]
	custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
	#                     ¦        ¦            ¦            ¦             +- author name
	#                     ¦        ¦            ¦            +- message
	#                     ¦        ¦            +- date (relative)
	#                     ¦        +- decorations (branch, heads or tags)
	#                     +- hash (abbreviated)

[url "git@github.com:"]
	insteadOf = gh:
	pushInsteadOf = github:
	pushInsteadOf = git://github.com/

[url "git://github.com/"]
	insteadOf = github:

[url "git@gist.github.com:"]
	insteadOf = gst:
	pushInsteadOf = gist:
	pushInsteadOf = git://gist.github.com/

[url "git://gist.github.com/"]

{% if additional_local_config is defined %}
{{ additional_local_config }}
{% endif %}
